# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from flower.proto import transport_pb2 as flower_dot_proto_dot_transport__pb2


class InstructionsStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Connect = channel.stream_stream(
        '/flower.transport.Instructions/Connect',
        request_serializer=flower_dot_proto_dot_transport__pb2.Instruction.SerializeToString,
        response_deserializer=flower_dot_proto_dot_transport__pb2.Report.FromString,
        )


class InstructionsServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Connect(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_InstructionsServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Connect': grpc.stream_stream_rpc_method_handler(
          servicer.Connect,
          request_deserializer=flower_dot_proto_dot_transport__pb2.Instruction.FromString,
          response_serializer=flower_dot_proto_dot_transport__pb2.Report.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'flower.transport.Instructions', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
